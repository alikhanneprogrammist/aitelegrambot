"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
"""
import os
import logging
from typing import Dict, Any
from telegram import Update
from telegram.ext import ContextTypes
from sales_folder.chatgpt_analyzer import ChatGPTAnalyzer
from personal_expenses.expense_manager import PersonalExpenseManager
from office_expenses.expense_manager import OfficeExpenseManager
from utils import data_cache
from config import TELEGRAM_SETTINGS, INTENT_KEYWORDS

logger = logging.getLogger(__name__)


class MessageHandler:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,
    –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏—è –∏ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.
    """
    
    def __init__(self, chatgpt_analyzer: ChatGPTAnalyzer, 
                 personal_expense_manager: PersonalExpenseManager,
                 office_expense_manager: OfficeExpenseManager):
        self.chatgpt_analyzer = chatgpt_analyzer
        self.personal_expense_manager = personal_expense_manager
        self.office_expense_manager = office_expense_manager
    
    async def handle_voice_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        await update.message.reply_text("üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
    
    async def handle_text_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        message_text = update.message.text
        message_text_lower = message_text.lower()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        intent = self._detect_intent(message_text_lower)
        
        if intent == 'edit':
            await self._handle_edit_request(update, context)
        elif intent == 'analysis':
            await self._handle_analysis_request(update, context)
        elif intent == 'insights':
            await self._handle_insights_request(update, context)
        elif intent == 'update':
            await self._handle_update_request(update, context)
        elif intent == 'personal_expense':
            await self._handle_personal_expense_request(update, context)
        elif intent == 'office_expense':
            await self._handle_office_expense_request(update, context)
        else:
            await self._handle_unknown_request(update, context)
    
    def _detect_intent(self, message_text: str) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        edit_matches = sum(1 for keyword in INTENT_KEYWORDS['edit'] if keyword in message_text)
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        analysis_matches = sum(1 for keyword in INTENT_KEYWORDS['analysis'] if keyword in message_text)
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∏–Ω—Å–∞–π—Ç–æ–≤
        insights_matches = sum(1 for keyword in INTENT_KEYWORDS['insights'] if keyword in message_text)
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        update_matches = sum(1 for keyword in INTENT_KEYWORDS['update'] if keyword in message_text)
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
        personal_expense_keywords = [
            '–ø–æ—Ç—Ä–∞—Ç–∏–ª', '–∫—É–ø–∏–ª', '–∑–∞–ø–ª–∞—Ç–∏–ª', '–ø–æ—Ç—Ä–∞—Ç–∏–ª–∞', '–∫—É–ø–∏–ª–∞', '–∑–∞–ø–ª–∞—Ç–∏–ª–∞',
            '–µ–¥–∞', '–∫–∞—Ñ–µ', '—Ä–µ—Å—Ç–æ—Ä–∞–Ω', '–ø—Ä–æ–¥—É–∫—Ç—ã', '—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', '—Ç–∞–∫—Å–∏', '–±–µ–Ω–∑–∏–Ω',
            '—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', '–∫–∏–Ω–æ', '–∏–≥—Ä—ã', '–æ–¥–µ–∂–¥–∞', '–∑–¥–æ—Ä–æ–≤—å–µ', '–ª–µ–∫–∞—Ä—Å—Ç–≤–∞',
            '–ª–∏—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥', '–ª–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã'
        ]
        personal_expense_matches = sum(1 for keyword in personal_expense_keywords if keyword in message_text)
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ—Ñ–∏—Å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
        office_expense_keywords = [
            '–∫–∞–Ω—Ü–µ–ª—è—Ä–∏—è', '—Ä—É—á–∫–∏', '–±—É–º–∞–≥–∞', '–ø—Ä–∏–Ω—Ç–µ—Ä', '–∫–æ–º–ø—å—é—Ç–µ—Ä', '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç',
            '—Å–≤—è–∑—å', '—É–±–æ—Ä–∫–∞', '–∫–ª–∏–Ω–∏–Ω–≥', '—Ä–µ–º–æ–Ω—Ç', '–∞—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞', '–æ—Ñ–∏—Å–Ω—ã–π —Ä–∞—Å—Ö–æ–¥',
            '–æ—Ñ–∏—Å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã', '–æ—Ñ–∏—Å'
        ]
        office_expense_matches = sum(1 for keyword in office_expense_keywords if keyword in message_text)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ
        if edit_matches >= 2:
            return 'edit'
        elif personal_expense_matches >= 1:
            return 'personal_expense'
        elif office_expense_matches >= 1:
            return 'office_expense'
        elif analysis_matches >= 1:
            return 'analysis'
        elif insights_matches >= 1:
            return 'insights'
        elif update_matches >= 1:
            return 'update'
        else:
            return 'unknown'
    
    async def _handle_edit_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        await update.message.reply_text("ü§ñ –ü–æ–Ω—è–ª, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    async def _handle_analysis_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∞–Ω–∞–ª–∏–∑"""
        await update.message.reply_text("ü§ñ –ü–æ–Ω—è–ª, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑. –ó–∞–ø—É—Å–∫–∞—é...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞
    
    async def _handle_insights_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∏–Ω—Å–∞–π—Ç—ã"""
        await update.message.reply_text("ü§ñ –ü–æ–Ω—è–ª, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–Ω—Å–∞–π—Ç—ã. –ü–æ–ª—É—á–∞—é...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∏–Ω—Å–∞–π—Ç–æ–≤
    
    async def _handle_update_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"""
        await update.message.reply_text("ü§ñ –ü–æ–Ω—è–ª, —á—Ç–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—ã. –í—ã–ø–æ–ª–Ω—è—é...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    
    async def _handle_personal_expense_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤"""
        await update.message.reply_text("üè† –ü–æ–Ω—è–ª, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
    
    async def _handle_office_expense_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ñ–∏—Å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤"""
        await update.message.reply_text("üè¢ –ü–æ–Ω—è–ª, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ñ–∏—Å–Ω—ã–π —Ä–∞—Å—Ö–æ–¥. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ñ–∏—Å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
    
    async def _handle_unknown_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã"""
        await update.message.reply_text(
            f"ü§ñ –ü–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: \"{update.message.text}\"\n\n"
            f"üí° **–ù–û–í–û–ï**: –¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –¥–∞–Ω–Ω—ã—Ö!\n\n"
            f"–ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≥–æ, —á—Ç–æ —è –º–æ–≥—É:\n"
            f"‚Ä¢ \"–°–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ò–≤–∞–Ω?\"\n"
            f"‚Ä¢ \"–ö–∞–∫–æ–π —Ç–æ–≤–∞—Ä —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π?\"\n"
            f"‚Ä¢ \"–ü–æ–∫–∞–∂–∏ –∑–∞–∫–∞–∑—ã –±–æ–ª—å—à–µ 100000 —Ç–µ–Ω–≥–µ\"\n"
            f"‚Ä¢ \"–°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ –∑–∞ –Ω–µ–¥–µ–ª—é\"\n"
            f"‚Ä¢ \"–°—Ä–∞–≤–Ω–∏ –ø—Ä–æ–¥–∞–∂–∏ —Ä–∞–∑–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤\"\n\n"
            f"üìã –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            f"üìù /edit - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ\n"
            f"üìä /analyze - –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑\n"
            f"‚ö° /insights - –±—ã—Å—Ç—Ä–∞—è —Å–≤–æ–¥–∫–∞\n"
            f"üîÑ /refresh - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ\n"
            f"‚ùì /help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞"
        )
